"use strict";(self.webpackChunkchia_dev_guides=self.webpackChunkchia_dev_guides||[]).push([[63],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return p}});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var f=n.createContext({}),s=function(e){var a=n.useContext(f),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=s(e.components);return n.createElement(f.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,f=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(t),p=l,m=u["".concat(f,".").concat(p)]||u[p]||c[p]||r;return t?n.createElement(m,i(i({ref:a},d),{},{components:t})):n.createElement(m,i({ref:a},d))}));function p(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=u;var o={};for(var f in a)hasOwnProperty.call(a,f)&&(o[f]=a[f]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5162:function(e,a,t){t.d(a,{Z:function(){return i}});var n=t(7294),l=t(4334),r="tabItem_Ymn6";function i(e){var a=e.children,t=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:t},a)}},5488:function(e,a,t){t.d(a,{Z:function(){return p}});var n=t(3117),l=t(7294),r=t(4334),i=t(2389),o=t(7392),f=t(7094),s=t(2466),d="tabList__CuJ",c="tabItem_LNqP";function u(e){var a,t,i=e.lazy,u=e.block,p=e.defaultValue,m=e.values,h=e.groupId,b=e.className,k=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=m?m:k.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),g=(0,o.l)(y,(function(e,a){return e.value===a.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===p?p:null!=(a=null!=p?p:null==(t=k.find((function(e){return e.props.default})))?void 0:t.props.value)?a:k[0].props.value;if(null!==N&&!y.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,f.U)(),w=v.tabGroupChoices,_=v.setTabGroupChoices,C=(0,l.useState)(N),x=C[0],T=C[1],I=[],D=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var A=w[h];null!=A&&A!==x&&y.some((function(e){return e.value===A}))&&T(A)}var L=function(e){var a=e.currentTarget,t=I.indexOf(a),n=y[t].value;n!==x&&(D(a),T(n),null!=h&&_(h,String(n)))},O=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n,l=I.indexOf(e.currentTarget)+1;t=null!=(n=I[l])?n:I[0];break;case"ArrowLeft":var r,i=I.indexOf(e.currentTarget)-1;t=null!=(r=I[i])?r:I[I.length-1]}null==(a=t)||a.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",d)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":u},b)},y.map((function(e){var a=e.value,t=e.label,i=e.attributes;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===a?0:-1,"aria-selected":x===a,key:a,ref:function(e){return I.push(e)},onKeyDown:O,onFocus:L,onClick:L},i,{className:(0,r.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":x===a})}),null!=t?t:a)}))),i?(0,l.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},k.map((function(e,a){return(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==x})}))))}function p(e){var a=(0,i.Z)();return l.createElement(u,(0,n.Z)({key:String(a)},e))}},9132:function(e,a,t){t.r(a),t.d(a,{assets:function(){return u},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=t(3117),l=t(102),r=(t(7294),t(3905)),i=t(5488),o=t(5162),f=["components"],s={id:"datalayer-user-guide",slug:"/datalayer-user-guide",title:"DataLayer User Guide"},d=void 0,c={unversionedId:"datalayer/datalayer-user-guide",id:"datalayer/datalayer-user-guide",title:"DataLayer User Guide",description:"This document will guide you through the process of setting up Chia's DataLayer and running a few basic functions. For additional technical resources, see the following:",source:"@site/guides/datalayer/datalayer-user-guide.mdx",sourceDirName:"datalayer",slug:"/datalayer-user-guide",permalink:"/guides/datalayer-user-guide",draft:!1,editUrl:"https://github.com/Chia-Network/chia-dev-guides/edit/main/guides/datalayer/datalayer-user-guide.mdx",tags:[],version:"current",frontMatter:{id:"datalayer-user-guide",slug:"/datalayer-user-guide",title:"DataLayer User Guide"},sidebar:"tutorialSidebar",previous:{title:"Minting NFTs With RPC",permalink:"/guides/nft-rpc"}},u={},p=[{value:"Install and configure Chia and the DataLayer",id:"install-and-configure-chia-and-the-datalayer",level:3},{value:"Using DataLayer",id:"using-datalayer",level:2},{value:"Create a data store",id:"create-a-data-store",level:3},{value:"Add and Delete Keys",id:"add-and-delete-keys",level:3},{value:"View Keys and Values",id:"view-keys-and-values",level:3},{value:"View on-chain history",id:"view-on-chain-history",level:3},{value:"Create A Mirror to Advertise A Data Store",id:"create-a-mirror-to-advertise-a-data-store",level:3},{value:"Subscribe to a Data Store",id:"subscribe-to-a-data-store",level:3}],m={toc:p};function h(e){var a=e.components,t=(0,l.Z)(e,f);return(0,r.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document will guide you through the process of setting up Chia's DataLayer and running a few basic functions. For additional technical resources, see the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.chia.net/docs/12rpcs/datalayer_rpcs",title:"DataLayer RPC API"},"DataLayer RPC API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.chia.net/docs/13cli/datalayer_cli",title:"DataLayer CLI Reference"},"DataLayer CLI Reference"))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Commands that modify the blockchain include an optional fee. This fee can be specified in two ways:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"-m")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"--fee")," parameter can be specified explicitly in the command, as several of the examples in this document show"),(0,r.kt)("li",{parentName:"ol"},"If the fee option is not explicitly specified, then the ",(0,r.kt)("inlineCode",{parentName:"li"},"data_layer:fee")," setting in ",(0,r.kt)("inlineCode",{parentName:"li"},"~/.chia/mainnet/config/config.yaml")," will be used. By default, this is set to 1 billion mojos (0.001 XCH)"),(0,r.kt)("li",{parentName:"ol"},"If neither of these options is set, then no fee will be used"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"install-and-configure-chia-and-the-datalayer"},"Install and configure Chia and the DataLayer"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Your firewall might give warnings when installing Chia. This is normal. Allow the installation to continue.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the latest ",(0,r.kt)("a",{parentName:"p",href:"https://www.chia.net/download/"},"Chia installer"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Chia"))),(0,r.kt)("admonition",{title:"OS-Specific Instructions",type:"info"},(0,r.kt)(i.Z,{defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"Linux",value:"linux"},{label:"MacOS",value:"macos"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"windows",mdxType:"TabItem"},(0,r.kt)("div",{style:{textAlign:"left"}},(0,r.kt)("img",{src:"/img/data_layer/01_downloads_windows.png",alt:"Chia installation file"})),(0,r.kt)("p",{parentName:"admonition"},"Double click the .exe installer. The installation process will take less than 30 seconds on most computers."),"  "),(0,r.kt)(o.Z,{value:"linux",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"For Debian/Ubuntu Linux distributions, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dpkg -i chia-blockchain_<version>_<arch>.deb\n")),(0,r.kt)("p",{parentName:"admonition"},"For other distributions, see ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Chia-Network/chia-blockchain/wiki/INSTALL"},"the install Wiki"),"."),"  "),(0,r.kt)(o.Z,{value:"macos",mdxType:"TabItem"},(0,r.kt)("div",{style:{textAlign:"left"}},(0,r.kt)("img",{src:"/img/data_layer/02_downloads_mac.png",alt:"Chia installation file"})),(0,r.kt)("p",{parentName:"admonition"},"Double click the .dmg installer. After the installation completes, drag the Chia icon to the Applications folder."),"  "))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Run the Chia reference wallet GUI:")),(0,r.kt)("admonition",{title:"OS-Specific Instructions",type:"info"},(0,r.kt)(i.Z,{defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"Linux",value:"linux"},{label:"MacOS",value:"macos"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"windows",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"The Chia reference wallet GUI will start automatically after the installation completes."),"  "),(0,r.kt)(o.Z,{value:"linux",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"Open a terminal window and run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia-blockchain &\n")),"  "),(0,r.kt)(o.Z,{value:"macos",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"Start Chia from your ",(0,r.kt)("em",{parentName:"p"},"Applications")," folder:"),(0,r.kt)("div",{style:{textAlign:"left"}},(0,r.kt)("img",{src:"/img/data_layer/03_start_chia_mac.png",alt:"Choose Farming Mode"})),"  "))),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"If this is your first time installing Chia on this machine, the ",(0,r.kt)("inlineCode",{parentName:"li"},"Select Your Client Mode")," dialog will appear:")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/04_wallet_farming_mode.png",alt:"Choose Farming Mode"})),(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you select ",(0,r.kt)("inlineCode",{parentName:"li"},"Farming Mode"),", you will run a full node",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Advantage: your wallet will respond faster than it would in ",(0,r.kt)("inlineCode",{parentName:"li"},"Wallet Mode")),(0,r.kt)("li",{parentName:"ul"},"Disadvantage: you need to sync the blockchain database, which can take several days if you are starting from the genesis block"))),(0,r.kt)("li",{parentName:"ul"},"If you select ",(0,r.kt)("inlineCode",{parentName:"li"},"Wallet Mode"),", you will only run a light wallet",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Advantage: no need to sync a full node"),(0,r.kt)("li",{parentName:"ul"},"Disadvantage: slower wallet performance"))),(0,r.kt)("li",{parentName:"ul"},"Most users should select ",(0,r.kt)("inlineCode",{parentName:"li"},"Farming Mode"),", in order to gain the long-term performance advantage of running a full node")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"If you don't already have a Chia private key (wallet), you will need to create one now. If you already have a private key, proceed to step 6.")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/05_create_private_key.png",alt:"Create a private key"})),(0,r.kt)("br",null),(0,r.kt)("p",null,"You will be shown a list of 24 words. Copy these words to a private location. Order is important."),(0,r.kt)("admonition",{title:"important",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Your seed phrase is all that is required to recover your wallet. If you lose your seed phrase, recovery will not be possible. If a bad actor gains access to your seed phrase, they'll be able to steal your Chia. Do not take a picture of your seed phrase or store it on a computer.")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/06_seed_phrase.png",alt:"24-word seed phrase"}),(0,r.kt)("figcaption",null,(0,r.kt)("em",null,"Carefully copy your mnemonic seed phrase for future wallet recovery."))),(0,r.kt)("br",null),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"Select Key")," dialog will appear. If you see multiple keys, select one that has some XCH (if possible).")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/07_choose_key.png",alt:"Select Key dialog"}),(0,r.kt)("figcaption",null,(0,r.kt)("em",null,"If the Select Key dialog appears, choose your primary key."))),(0,r.kt)("br",null),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},'Your wallet will begin syncing. "WALLET" will appear in the upper right corner. The orange dot indicates that the wallet is syncing. You may proceed to the next step while syncing is in progress.')),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/08_not_synced.png",alt:"Not synced"}),(0,r.kt)("figcaption",null,(0,r.kt)("em",null,"The wallet is syncing."))),(0,r.kt)("br",null),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Open PowerShell on Windows, or Terminal on Linux and MacOS.")),(0,r.kt)("p",null,"We'll create an alias to run the ",(0,r.kt)("inlineCode",{parentName:"p"},"chia")," command from any folder. We'll also fix any SSL permissions issues. Run the following command(s):"),(0,r.kt)("admonition",{title:"Chia setup",type:"info"},(0,r.kt)(i.Z,{defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"Linux",value:"linux"},{label:"MacOS",value:"macos"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"windows",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"(Be sure to update ","<","username",">"," and ","<","version",">"," to match the actual folder structure)"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"Set-Alias -Name chia C:\\Users\\<username>\\AppData\\Local\\chia-blockchain\\app-<version>\\resources\\app.asar.unpacked\\daemon\\chia.exe\n")),"  "),(0,r.kt)(o.Z,{value:"linux",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"Alias command is not needed, but you should still run the following:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia init --fix-ssl-permissions\n")),"  "),(0,r.kt)(o.Z,{value:"macos",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"alias chia='/Applications/Chia.app/Contents/Resources/app.asar.unpacked/daemon/chia'\nchia init --fix-ssl-permissions\n")),"  "))),(0,r.kt)("ol",{start:9},(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"chia version"),". You should be shown the correct version. For example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"chia version\n1.6.0\n")),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},"(optional) Run ",(0,r.kt)("inlineCode",{parentName:"li"},"chia configure --set-log-level INFO"),". This will instruct your Chia installation to log more info than it would have with the default level of WARNING:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia configure --set-log-level INFO\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Logging level updated. Check ~/.chia/mainnet/log/debug.log\nRestart any running chia services for changes to take effect\n")),(0,r.kt)("p",null,"(You will restart Chia later in this guide.)"),(0,r.kt)("ol",{start:11},(0,r.kt)("li",{parentName:"ol"},"Acquire some XCH. 0.01 XCH is a sufficient amount to get started.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you ever need to display your address, run ",(0,r.kt)("inlineCode",{parentName:"p"},"chia keys show"),". This command will only output your public keys and address; your private keys and seed phrase will not be shown.")),(0,r.kt)("ol",{start:12},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configure your router to forward port 8575 (data propagation server) to your local machine. To configure your router's settings, typically you will need enter ",(0,r.kt)("inlineCode",{parentName:"p"},"http://192.168.1.1")," in a web browser, though this address varies for different routers. From your router's settings, locate the Port Forwarding section and add a rule to forward port 8575 to your local IP address.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You will also need to configure your computer's firewall to allow connections on port 8575. This process is different for each OS:"))),(0,r.kt)("admonition",{title:"Firewall setup",type:"info"},(0,r.kt)(i.Z,{defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"Linux",value:"linux"},{label:"MacOS",value:"macos"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"windows",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"From a PowerShell prompt, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"start-Process powershell -Verb runAs\n")),(0,r.kt)("p",{parentName:"admonition"},"This will open a new PowerShell window as an Administrator. From this new window, you will need to run four commands, two for incoming connections and two for outgoing connections."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'netsh advfirewall firewall add rule name="allowDataServerIn" dir=in action=allow protocol=TCP localport=8575\nnetsh advfirewall firewall add rule name="allowDataServerOut" dir=out action=allow protocol=TCP localport=8575\n')),(0,r.kt)("p",{parentName:"admonition"},"Each of these commands should give a response of ",(0,r.kt)("inlineCode",{parentName:"p"},"Ok.")," Once you have successfully run the commands, exit the Administrator PowerShell window."),"  "),(0,r.kt)(o.Z,{value:"linux",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"Assuming you use iptables, which is installed on most distributions by default, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo iptables -I INPUT -p tcp -m tcp --dport 8575 -j ACCEPT\nsudo iptables -I OUTPUT -p tcp -m tcp --dport 8575 -j ACCEPT\n")),(0,r.kt)("p",{parentName:"admonition"},"Next, save the settings. For Ubuntu and Debian, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo /sbin/iptables-save\n")),(0,r.kt)("p",{parentName:"admonition"},"For CentOS, Red Hat, and Fedora, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"/sbin/service iptables save\n")),"  "),(0,r.kt)(o.Z,{value:"macos",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"admonition"},"Open /etc/pf.conf in a text editor. You will need administrative privileges. For example:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo vi /etc/pf.conf\n")),(0,r.kt)("p",{parentName:"admonition"},"Add the following lines to the end of the file:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Open port 8575 for Chia Data Propagation Server\npass in proto tcp from any to any port 8575\n")),(0,r.kt)("p",{parentName:"admonition"},"Save and close the file."),(0,r.kt)("p",{parentName:"admonition"},"To load the changes, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pfctl -f /etc/pf.conf\n")),(0,r.kt)("p",{parentName:"admonition"},"To verify that the changes are active, run:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pfctl -sr | grep 8575\n")),"  "))),(0,r.kt)("ol",{start:14},(0,r.kt)("li",{parentName:"ol"},"Start the DataLayer services:")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/09_start_data.png",alt:"Start the DataLayer services"}),(0,r.kt)("figcaption",null,(0,r.kt)("em",null,"Enable DataLayer services."))),(0,r.kt)("br",null),(0,r.kt)("p",null,"As shown in the above image:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings")," on the lower left side of your wallet"),(0,r.kt)("li",{parentName:"ul"},"Click the ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA LAYER")," menu"),(0,r.kt)("li",{parentName:"ul"},"Click the slider to ",(0,r.kt)("inlineCode",{parentName:"li"},"Enable Data Layer")),(0,r.kt)("li",{parentName:"ul"},"A slider titled ",(0,r.kt)("inlineCode",{parentName:"li"},"Enable File Propagation Server")," will appear. Click this to enable it as well")),(0,r.kt)("p",null,"Finally, you need to restart Chia. Close the GUI and run steps 3 and 6 above. When Chia starts, it will automatically enable both of the DataLayer services."),(0,r.kt)("ol",{start:15},(0,r.kt)("li",{parentName:"ol"},"If the dot to the left of ",(0,r.kt)("inlineCode",{parentName:"li"},"WALLET")," is green (indicating that your wallet is synced), then you may proceed. If it is still orange, then you need to wait for it turn green before continuing.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Regardless of the status of ",(0,r.kt)("inlineCode",{parentName:"p"},"FULL NODE"),", you may safely proceed with this tutorial:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Orange dot = full node is syncing"),(0,r.kt)("li",{parentName:"ul"},"Green dot = full node is synced"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FULL NODE")," is missing = you are running in ",(0,r.kt)("inlineCode",{parentName:"li"},"Wallet Mode")))),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/data_layer/10_synced.png",alt:"Synced wallet"})),(0,r.kt)("br",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Chia and the DataLayer are now installed and configured properly.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"using-datalayer"},"Using DataLayer"),(0,r.kt)("p",null,"Chia DataLayer doesn't have a GUI. The commands in this tutorial will use the command line interface (CLI). As a reminder, here is the complete reference for the CLI, as well as all available Remote Procedure Calls (RPCs):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.chia.net/docs/12rpcs/datalayer_rpcs",title:"DataLayer RPC API"},"DataLayer RPC API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.chia.net/docs/13cli/datalayer_cli",title:"DataLayer CLI Reference"},"DataLayer CLI Reference"))),(0,r.kt)("h3",{id:"create-a-data-store"},"Create a data store"),(0,r.kt)("p",null,"This requires an on-chain transaction."),(0,r.kt)("p",null,"The command to create a new store is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data create_data_store -m <fee>\n")),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"<fee>")," is a standard transaction fee to use Chia's network. This fee is in XCH."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"create_data_store example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data create_data_store -m 0.00001\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n    'id': '1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f',\n    'success': True,\n    'txs':\n    [\n        {\n            'additions':\n            [\n                {\n                    'amount': 1,\n                    'parent_coin_info': '0xb4a1a658aaefd10930ecbccd51ac2c9a4853435b14acdb0de84729bfbefc791c',\n                    'puzzle_hash': '0xeff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9'\n                },\n                {\n                    'amount': 14999989999999,\n                    'parent_coin_info': '0xb4a1a658aaefd10930ecbccd51ac2c9a4853435b14acdb0de84729bfbefc791c',\n                    'puzzle_hash': '0x478255c372cec71557c20459f4b690fb1b7c57da3fcfc4b6396d78d9a396e384'\n                },\n                {\n                    'amount': 1,\n                    'parent_coin_info': '0x1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f',\n                    'puzzle_hash': '0xd650e81d45c7381183c14c3363a81aa78cb3acfe213e46da26df75cd431557f9'\n                }\n            ],\n            'amount': 1,\n            'confirmed': False,\n            'confirmed_at_height': 0,\n            'created_at_time': 1661141324,\n            'fee_amount': 10000000,\n            'memos': [],\n            'name': '0xaee362ae9d0ce3992b3bfb7cc48bde17f3d794cc383ff1d5e49a4d75dbf004d6',\n            'removals':\n            [\n                {\n                    'amount': 15000000000000,\n                    'parent_coin_info': '0x81fc1729bad3f19699461b1ee455a92493ef4c1d60ba37d22ac187a18367e08e',\n                    'puzzle_hash': '0x221c0e9cd9b7f536e9a204ef93519e6c9d4b4c9a049bde8d66fa1816c23120d2'\n                },\n                {\n                    'amount': 1,\n                    'parent_coin_info': '0xb4a1a658aaefd10930ecbccd51ac2c9a4853435b14acdb0de84729bfbefc791c',\n                    'puzzle_hash': '0xeff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9'\n                }\n            ],\n            'sent': 10,\n            'sent_to': [],\n            'spend_bundle': {\n                'aggregated_signature': '0x8c431f07698ad69fd14ab04d77683801e6b908e441074f5ef5268350483d194a09a8b3cde681cb5c5fcf6444e0c9d4bf00999e8e6ad1522891baa590f82d92e2876b08e34b1f3156d0fe88ce206e5ed1567863e10a0397fd0a8a66bcbd5007b0',\n                'coin_spends':\n                [\n                    {\n                        'coin':\n                        {\n                            'amount': 15000000000000,\n                            'parent_coin_info': '0x81fc1729bad3f19699461b1ee455a92493ef4c1d60ba37d22ac187a18367e08e',\n                            'puzzle_hash': '0x221c0e9cd9b7f536e9a204ef93519e6c9d4b4c9a049bde8d66fa1816c23120d2'\n                        },\n                        'puzzle_reveal': '0xff02ffff01ff02ffff01ff02ffff03ff0bffff01ff02ffff03ffff09ff05ffff1dff0bffff1effff0bff0bffff02ff06ffff04ff02ffff04ff17ff8080808080808080ffff01ff02ff17ff2f80ffff01ff088080ff0180ffff01ff04ffff04ff04ffff04ff05ffff04ffff02ff06ffff04ff02ffff04ff17ff80808080ff80808080ffff02ff17ff2f808080ff0180ffff04ffff01ff32ff02ffff03ffff07ff0580ffff01ff0bffff0102ffff02ff06ffff04ff02ffff04ff09ff80808080ffff02ff06ffff04ff02ffff04ff0dff8080808080ffff01ff0bffff0101ff058080ff0180ff018080ffff04ffff01b0b3deeeb00319624e26767c5cf777cf9a02d046510181ed29f233e2847fa8ef28ede05d2770bb1b8f101ea8ae20527d61ff018080',\n                        'solution': '0xff80ffff01ffff33ffa0eff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9ff0180ffff33ffa0478255c372cec71557c20459f4b690fb1b7c57da3fcfc4b6396d78d9a396e384ff860da47513597f80ffff34ff840098968080ffff3cffa084f72a9a3ce5152e1d627a259a0c1c90e6af389cb26af48173d84e374ecc518080ffff3dffa03a0ed375dff192685d1ef9a74424788b04655700bee898f0ea8445f8b55d38338080ff8080'\n                    },\n                    {\n                        'coin':\n                        {\n                            'amount': 1,\n                            'parent_coin_info': '0xb4a1a658aaefd10930ecbccd51ac2c9a4853435b14acdb0de84729bfbefc791c',\n                            'puzzle_hash': '0xeff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9'\n                        },\n                        'puzzle_reveal': '0xff02ffff01ff04ffff04ff04ffff04ff05ffff04ff0bff80808080ffff04ffff04ff0affff04ffff02ff0effff04ff02ffff04ffff04ff05ffff04ff0bffff04ff17ff80808080ff80808080ff808080ff808080ffff04ffff01ff33ff3cff02ffff03ffff07ff0580ffff01ff0bffff0102ffff02ff0effff04ff02ffff04ff09ff80808080ffff02ff0effff04ff02ffff04ff0dff8080808080ffff01ff0bffff0101ff058080ff0180ff018080',\n                        'solution': '0xffa0d650e81d45c7381183c14c3363a81aa78cb3acfe213e46da26df75cd431557f9ff01ffffa00000000000000000000000000000000000000000000000000000000000000000ffa0adcbcbaf4594e8d3057ea3a64a40560720ede80e720f867d2631069c27459de58080'\n                    }\n                ]\n            },\n            'to_puzzle_hash': '0x0202020202020202020202020202020202020202020202020202020202020202',\n            'trade_id': None,\n            'type': 0,\n            'wallet_id': 0\n        },\n        {\n            'additions':\n            [\n                {\n                    'amount': 1,\n                    'parent_coin_info': '0xb4a1a658aaefd10930ecbccd51ac2c9a4853435b14acdb0de84729bfbefc791c',\n                    'puzzle_hash': '0xeff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9'\n                },\n                {\n                    'amount': 14999989999999,\n                    'parent_coin_info': '0xb4a1a658aaefd10930ecbccd51ac2c9a4853435b14acdb0de84729bfbefc791c',\n                    'puzzle_hash': '0x478255c372cec71557c20459f4b690fb1b7c57da3fcfc4b6396d78d9a396e384'\n                }\n            ],\n            'amount': 1,\n            'confirmed': False,\n            'confirmed_at_height': 0,\n            'created_at_time': 1661141324,\n            'fee_amount': 10000000,\n            'memos': [],\n            'name': '0xbb4cb461126d9ea9492e767462b9a4e408e497231c2093474cba2bcfe4397104',\n            'removals':\n            [\n                {\n                    'amount': 15000000000000,\n                    'parent_coin_info':\n                    '0x81fc1729bad3f19699461b1ee455a92493ef4c1d60ba37d22ac187a18367e08e',\n                    'puzzle_hash': '0x221c0e9cd9b7f536e9a204ef93519e6c9d4b4c9a049bde8d66fa1816c23120d2'\n                }\n            ],\n            'sent': 0,\n            'sent_to': [],\n            'spend_bundle': None,\n            'to_puzzle_hash': '0xeff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9',\n            'trade_id': None,\n            'type': 1,\n            'wallet_id': 1\n        }\n    ]\n}\n"))),(0,r.kt)("p",null,"The only value you need from the JSON blob is ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", the first value in the output. In the above example, this was"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"'id': '1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f',\n")),(0,r.kt)("p",null,"You can't do anything with this store until it is confirmed on-chain. To check the status of this confirmation, run the ",(0,r.kt)("inlineCode",{parentName:"p"},"get_root")," command, passing in the ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),"."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"get_root example 1"),(0,r.kt)("p",null,"Before the transaction has been confirmed, ",(0,r.kt)("inlineCode",{parentName:"p"},"get_root")," will return an empty hash:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data get_root --id 1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n    'confirmed': True,\n    'hash': '0x0000000000000000000000000000000000000000000000000000000000000000',\n    'success': True,\n    'timestamp': 1661148563\n}\n"))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"get_root example 2"),(0,r.kt)("p",null,"After the transaction has been confirmed, ",(0,r.kt)("inlineCode",{parentName:"p"},"get_root")," will return a real hash:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data get_root --id 1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n    'confirmed': True,\n    'hash': '0xd6d6b4d6bbd77aaa5927c8a21a1451b35f4860a7f9a58e51dae04037da9c08e8',\n    'success': True,\n    'timestamp': 1661148611\n}\n"))),(0,r.kt)("h3",{id:"add-and-delete-keys"},"Add and Delete Keys"),(0,r.kt)("p",null,"This requires an on-chain transaction."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"update_data_store")," to modify your singleton. Actions include ",(0,r.kt)("inlineCode",{parentName:"p"},"insert")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"delete"),". These can also be chained together."),(0,r.kt)("p",null,"For more example of using this command, see the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.chia.net/docs/13cli/datalayer_cli#update_data_store"},"CLI reference"),"."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"update_data_store -- insert example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'chia data update_data_store --id=1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f -d \'[{"action":"insert", "key":"0003", "value":"abc123"}]\'\n')),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n    'success': True,\n    'tx_id': '0xed157b50b94a849d3d19a0ef4e1b0e07bda863e4d65bd1527fa6f59062bb5c78'\n}\n"))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"update_data_store -- delete example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'chia data update_data_store --id 1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f --changelist \'[{"action":"delete", "key":"0003"}]\'\n')),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n    'success': True,\n    'tx_id': '0x2a64ef42baf05c6f4d446ba8638c2f2b2c26e5a91ad62e0c5151df40d0f92ec2'\n}\n"))),(0,r.kt)("h3",{id:"view-keys-and-values"},"View Keys and Values"),(0,r.kt)("p",null,"You can view the keys and values with ",(0,r.kt)("inlineCode",{parentName:"p"},"get_keys_values"),". This command will only return data that has been confirmed on-chain -- if you run it immediately after adding data, it may not return the keys you expect."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"get_keys_values example"),(0,r.kt)("p",null,"For this example, there are two keys in the store:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data get_keys_values --id 1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"{\n    'keys_values': [\n        {\n            'atom': None,\n            'hash': '0x7e193b814080e50aa7780bcf71fd0422a0397ad3e57dc1eac71d93183efb39ba',\n            'key': '0x0004',\n            'value': '0x123abc'\n        },\n        {\n            'atom': None,\n            'hash': '0xc2dc94c2a85d7db4cfdd1d907bcc441c8fce595db2e2075b973fb8171e2f19a2',\n            'key': '0x0005',\n            'value': '0xbeadfeed'\n        }\n    ],\n    'success': True\n}\n"))),(0,r.kt)("h3",{id:"view-on-chain-history"},"View on-chain history"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"get_root_history")," to view the on-chain history of the root hash."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"get_root_history example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data get_root_history --id 1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n    'root_history': [\n        {\n            'confirmed': True,\n            'root_hash': '0x0000000000000000000000000000000000000000000000000000000000000000',\n            'timestamp': 1661141342\n        },\n        {\n            'confirmed': True,\n            'root_hash': '0xe488fa1bf0f712b224df0daf312b3d479f80e3a330d4bebd8f26a0d52dc0ebbb',\n            'timestamp': 1661144917\n        },\n        {\n            'confirmed': True,\n            'root_hash': '0x0000000000000000000000000000000000000000000000000000000000000000',\n            'timestamp': 1661145223\n        },\n        {\n            'confirmed': True,\n            'root_hash': '0xb5420e65846ded936d1e4855c066247fc461a3b281cd9e0e69f3cfa4df529ba2',\n            'timestamp': 1661145404\n        },\n        {\n            'confirmed': True,\n            'root_hash': '0xd6d6b4d6bbd77aaa5927c8a21a1451b35f4860a7f9a58e51dae04037da9c08e8',\n            'timestamp': 1661148611\n        }\n    ],\n    'success': True\n}\n"))),(0,r.kt)("h3",{id:"create-a-mirror-to-advertise-a-data-store"},"Create A Mirror to Advertise A Data Store"),(0,r.kt)("p",null,"This requires an on-chain transaction."),(0,r.kt)("p",null,"We include an HTTP server that can be used out of the box. By default it listens to port 8575."),(0,r.kt)("p",null,'To "advertise" your mirror on-chain you use the ',(0,r.kt)("inlineCode",{parentName:"p"},"add_mirror")," command. This command takes three arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"i")," -- Your root's ID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"u")," -- The URL of your mirror. You can reuse this argument, as shown in the example below"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"a")," -- The amount (in mojos) to spend to create the mirror. In theory, mirrors with a higher ",(0,r.kt)("inlineCode",{parentName:"li"},"amount")," will be prioritized. Minimum ",(0,r.kt)("inlineCode",{parentName:"li"},"amount")," is 0")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"add_mirror example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data add_mirror -i 67b5e98abd5fef1a1c44ee63077bc5ef75c6cc4dadc9fd52d63a343922ce496b -u http://www.example2.com:8575 -u http://10.1.1.32:8575/ -a 1000\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"None\n"))),(0,r.kt)("p",null,"The HTTP server will serve files that are generated by default in the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.chia/mainnet/data_layer/db/server_files_location_mainnet")," directory."),(0,r.kt)("p",null,"Note that you can mirror any Data Store, not just your own."),(0,r.kt)("h3",{id:"subscribe-to-a-data-store"},"Subscribe to a Data Store"),(0,r.kt)("p",null,"You can subscribe to a data store in order to watch for changes and download the data from published mirrors by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe")," command:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"subscribe example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia data subscribe -store 8f6ed792bbbf5216f8e55064793f74ce01286b9c1d542cc4a357cf7f8712df1d\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"None\n")),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"subscriptions")," RPC to list all current subscriptions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chia rpc data_layer subscriptions\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "store_ids": [\n        "1a119374fc7d7055d3419fdcd7f93065f28a1e4acacdf9c73b933b27b685550f",\n        "8f6ed792bbbf5216f8e55064793f74ce01286b9c1d542cc4a357cf7f8712df1d"\n    ],\n    "success": true\n}\n'))),(0,r.kt)("p",null,"Once subscribed, you will automatically try to download updates from any published mirrors for that singleton. You can use the earlier mentioned commands ",(0,r.kt)("inlineCode",{parentName:"p"},"get_root_history")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"get_keys_values")," to look at the history and data of any subscribed data stores. The HTTP server will automatically start to publish data for all subscribed data stores. However, it won't be advertised on-chain unless you specifically use ",(0,r.kt)("inlineCode",{parentName:"p"},"add_mirror"),"."))}h.isMDXComponent=!0}}]);